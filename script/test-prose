#!/usr/bin/env node

// Retext stuff
var unified = require('unified');

// Remark stuff
var parse = require('remark-parse');
var lint = require('remark-lint');
var remark2retext = require('remark-retext');
var stringify = require('remark-stringify');

// Util stuff
var report = require('vfile-reporter');
var glob = require('glob');
var fs = require('fs');
var async = require('async');
var yaml = require('js-yaml');
var jekyllConfig = yaml.safeLoad(fs.readFileSync('_config.yml', 'utf8'));
var ignore = require('ignore')().add(jekyllConfig["exclude"])

var options = {
  // https://github.com/wooorm/remark-lint/blob/master/doc/rules.md
  "lint": {
    "list-item-indent": "space",    // As the gods intended.
    "maximum-line-length": false,   // turn off line length linting
    "no-html": false,               // Sadly, need HTML for video embeds
    "no-heading-punctuation": false,
    "list-item-spacing": false,
  },
  "readability": {
    "age": 18
  },
  "simplify": {
    ignore: [
      "modify",
      "contribute",
      "previous"
    ]
  }
};

async.map(ignore.filter(glob.sync("**/*.md")), function(file, callback) {
  fs.readFile(file, function(err, contents) {
    unified()
      .use(parse)
      .use(lint, options["lint"])
      .use(remark2retext, unified()
        .use(require('retext-english'))
        .use(require('retext-simplify'), options["simplify"])
        .use(require('retext-equality'))
        .use(require('retext-readability'), options["readability"])
      )
      .use(stringify)
      .process(contents.toString(), function (err, result) {
          result.filename = file;
          callback(err, result);
      });
  });
}, function (err, results) {
  console.log(report(results));
});
